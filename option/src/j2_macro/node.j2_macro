{% macro dependencies() -%}
    {%- if db_family == "oracle" %}
    ,"oracledb": "^6.0.0"
    {%- elif db_family == "mysql" %}
    ,"mysql2": "^2.3.3"
    {%- elif db_family == "psql" %}
    ,"pg": "^8.11.3"
    {%- elif db_family == "opensearch" %}
    ,"node-fetch": "^2.6.1"
    {%- elif db_family == "nosql" -%}
    ,"oracle-nosqldb": "^5.2"
    {%- endif %}        
{%- endmacro -%}

{%- macro import() %}
{%- if db_family == "oracle" -%}
const oracledb = require('oracledb');
{%- elif db_family == "mysql" -%}
const mysql = require('mysql2/promise');
{%- elif db_family == "psql" -%}
const Pool = require('pg').Pool
{%- elif db_family == "opensearch" -%}
const fetch = require("node-fetch");
{%- elif db_family == "nosql" -%}
const NoSQLClient = require('oracle-nosqldb').NoSQLClient;
let client = createClient();

function createClient() {
    return new NoSQLClient({
        endpoint: process.env.TF_VAR_nosql_endpoint,
        compartment:process.env.TF_VAR_compartment_ocid,
        auth: {
            iam: {
                {%- if deploy_type in ["compute", "kubernetes", "instance_pool"] %}
                useInstancePrincipal: true
                {%- else %}
                useResourcePrincipal: true
                {%- endif %}   
            }
        }
    });
}
{%- endif %}
{%- endmacro -%}

{%- macro dept() -%}
{%- if db_family == "none" -%}{{ nodb() }}
{%- elif db_family == "oracle" -%}{{ oracle() }}
{%- elif db_family == "mysql" -%}{{ mysql() }}
{%- elif db_family == "psql" -%}{{ psql() }}
{%- elif db_family == "opensearch" -%}{{ opensearch() }}
{%- elif db_family == "nosql" -%}{{ nosql() }}
{%- endif -%}
{%- endmacro -%}

{% macro nodb() -%}
    let rows = [ 
        { "deptno": "10", "dname": "ACCOUNTING", "loc": "Seoul"}, 
        { "deptno": "20", "dname": "RESEARCH", "loc": "Cape Town"}, 
        { "deptno": "30", "dname": "SALES", "loc": "Brussels"}, 
        { "deptno": "40", "dname": "OPERATIONS", "loc": "San Francisco"} 
    ];
{%- endmacro -%}

{% macro oracle() -%}
    let con = await oracledb.getConnection({ user: process.env.DB_USER, password: process.env.DB_PASSWORD, connectionString: process.env.DB_URL });
    result = await con.execute(
        `select deptno, dname, loc from DEPT`,
        [],
        { resultSet: true, outFormat: oracledb.OUT_FORMAT_OBJECT });
    const rs = result.resultSet;
    let row;
    let rows = [];
    while ((row = await rs.getRow())) {
        rows.push(row);
    }
    await rs.close();
    await con.close();
{%- endmacro -%}

{% macro mysql() -%}
    const aDbURL= process.env.DB_URL.split(":");
    const con = await mysql.createConnection({
        host: aDbURL[0],
        user: process.env.DB_USER,
        password: process.env.DB_PASSWORD,
        database: "db1"
    });
    const [rows, fields] = await con.execute("SELECT deptno, dname, loc FROM dept");
    con.end();   
{%- endmacro -%}

{% macro psql() -%}
    let con = new Pool({
        host: process.env.DB_URL,
        database: 'postgres',
        user: process.env.DB_USER,
        password: process.env.DB_PASSWORD,
        port: 5432,
        ssl: {
            rejectUnauthorized: false
        }
    })
    response = await con.query("SELECT deptno, dname, loc FROM dept");
    rows = response.rows;
{%- endmacro -%}

{% macro opensearch() -%}
    var url = "https://"+process.env.DB_URL+":9200/dept/_search?size=1000&scroll=1m&pretty=true"
    console.log("url:" + url);

    const response = await fetch(url);
    const j = await response.json();
    console.log(j);
    let rows = [];
    for (i in j.hits.hits) {
        hit = j.hits.hits[i]
        rows.push({"deptno":hit._source.deptno,"dname":hit._source.dname,"loc":hit._source.loc })
    }      
{%- endmacro -%}

{% macro nosql() -%}
    // See https://oracle.github.io/nosql-node-sdk/pages/tables.html
    let rows = [];
    for await(let result of client.queryIterable('SELECT deptno, dname, loc FROM dept')) {
        for(let row of result.rows) {
            rows.push( row );
        }    
    }
{%- endmacro -%}
